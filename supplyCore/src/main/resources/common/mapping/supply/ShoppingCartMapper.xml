<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sekorm.core.dao.supply.ShoppingCartMapper" >
  <resultMap id="BaseResultMap" type="com.sekorm.core.model.supply.ShoppingCart" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mem_id" property="memId" jdbcType="INTEGER" />
    <result column="supply_id" property="supplyId" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, mem_id, supply_id, amount, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_shopping_cart
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_shopping_cart
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sekorm.core.model.supply.ShoppingCart" >
    insert into t_shopping_cart (id, mem_id, supply_id, 
      amount, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{memId,jdbcType=INTEGER}, #{supplyId,jdbcType=INTEGER}, 
      #{amount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sekorm.core.model.supply.ShoppingCart" >
    insert into t_shopping_cart
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memId != null" >
        mem_id,
      </if>
      <if test="supplyId != null" >
        supply_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="memId != null" >
        #{memId,jdbcType=INTEGER},
      </if>
      <if test="supplyId != null" >
        #{supplyId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sekorm.core.model.supply.ShoppingCart" >
    update t_shopping_cart
    <set >
      <if test="memId != null" >
        mem_id = #{memId,jdbcType=INTEGER},
      </if>
      <if test="supplyId != null" >
        supply_id = #{supplyId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sekorm.core.model.supply.ShoppingCart" >
    update t_shopping_cart
    set mem_id = #{memId,jdbcType=INTEGER},
      supply_id = #{supplyId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  <resultMap id="PnShoppingCartDO" type="com.sekorm.dubbo.beans.isupply.PnShoppingCartDO">
    <result column="id" property="cartId" javaType="Integer" />
    <result column="supply_id" property="supplyId" javaType="Integer" />
    <result column="amount" property="amount" javaType="Integer" />
    <result column="sp_id" property="spId" javaType="Integer" />
    <result column="pn_code" property="pnCode" javaType="String" />
    <result column="brand_name" property="brand" javaType="String" />
    <result column="mpq" property="minPackAmount" javaType="Integer" />
    <result column="moq" property="minOrderAmount" javaType="Integer" />
    <result column="stock_quantity" property="pcs" javaType="Integer" />
    <result column="sz_stock_quantity" property="szPcs" javaType="Integer" />
    <result column="status" property="status" javaType="Integer" />
  </resultMap>
  <insert id="insertCart" >
    insert into supply.t_shopping_cart (mem_id, supply_id, amount, create_time, update_time)
    values (#{memId,jdbcType=INTEGER}, #{supplyId,jdbcType=INTEGER}, #{amount,jdbcType=INTEGER}, 
    	now(), now() )
  </insert>
  <update id="updateCart">
    update supply.t_shopping_cart
    set amount = #{amount,jdbcType=INTEGER}, update_time = now()
    where mem_id = #{memId,jdbcType=INTEGER} and supply_id = #{supplyId,jdbcType=INTEGER}
  </update>
  <update id="batchUpdateAmount">
	  INSERT INTO supply.t_shopping_cart (id, amount) 
	  VALUES 
	  <foreach item="amount" index="id" collection="carts" separator=",">
			(#{id,jdbcType=INTEGER}, #{amount,jdbcType=INTEGER})
	  </foreach>
	  ON DUPLICATE KEY UPDATE amount=values(amount)
  </update>
  <delete id="deleteCart" >
    delete from supply.t_shopping_cart
    where mem_id = #{memId,jdbcType=INTEGER} and supply_id = #{supplyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteCartBatch" >
    delete from supply.t_shopping_cart
    where mem_id = #{memId,jdbcType=INTEGER} and id IN
    <foreach item="id" index="index" collection="cartIds" open="("
		separator="," close=")">
		#{id}
	</foreach>
  </delete>
  <delete id="deleteBySupplyIds" >
    delete from supply.t_shopping_cart
    where mem_id = #{memId,jdbcType=INTEGER} and supply_id IN
    <foreach item="supplyId" index="index" collection="supplyIds" open="("
		separator="," close=")">
		#{supplyId}
	</foreach>
  </delete>
  
  <select id="getCartOne" resultMap="PnShoppingCartDO">
  	SELECT cart.id, suppn.id supplyId, suppn.moq, cart.amount, stock.pn_code,
  		IFNULL(stock.stock_quantity,0) stock_quantity, IFNULL(suppn.`status`,2) status
	FROM supply.t_pn_supply suppn 
	LEFT JOIN spm.t_partnumber_stock stock ON suppn.pn_id = stock.pn_id
	LEFT JOIN supply.t_shopping_cart cart ON cart.mem_id = #{memId,jdbcType=INTEGER} AND cart.supply_id = suppn.id
	WHERE suppn.id = #{supplyId,jdbcType=INTEGER} AND stock.state = 0 AND stock.`status` = 0
  </select>
  
  <select id="getCartListByIds" resultMap="PnShoppingCartDO">
  	SELECT cart.id, cart.supply_id, cart.amount, suppn.moq, 
  		IFNULL(suppn.`status`,2) status, stock.sp_id, stock.pn_code, 
  		stock.brand_name, IFNULL(stock.stock_quantity, 0) stock_quantity, 
  		IFNULL(stock.sz_stock_quantity, 0) sz_stock_quantity
	FROM (SELECT id, supply_id, amount FROM supply.t_shopping_cart 
		WHERE mem_id = #{memId,jdbcType=INTEGER} AND id IN
		<foreach item="id" index="index" collection="cartIds" open="("
		separator="," close=")">
		#{id}
	</foreach>
		) cart 
	LEFT JOIN supply.t_pn_supply suppn ON cart.supply_id = suppn.id
	LEFT JOIN spm.t_partnumber_stock stock ON stock.state = 0 AND stock.`status` = 0 AND suppn.pn_id = stock.pn_id
  </select>
  <select id="getCartList" resultMap="PnShoppingCartDO">
  	SELECT cart.id, cart.supply_id, cart.amount, 
  		IFNULL(suppn.`status`,1) status, stock.pn_code, stock.brand_name, 
  		stock.mpq, suppn.moq, IFNULL(stock.stock_quantity, 0) stock_quantity
	FROM (SELECT id, supply_id, amount FROM supply.t_shopping_cart 
		WHERE mem_id = #{memId,jdbcType=INTEGER} 
		ORDER BY update_time DESC
		<if test="start != null and len != null">
		LIMIT #{start,jdbcType=INTEGER}, #{len,jdbcType=INTEGER}
		</if>
		) cart 
	LEFT JOIN supply.t_pn_supply suppn ON cart.supply_id = suppn.id
	LEFT JOIN spm.t_partnumber_stock stock ON stock.state = 0 AND stock.`status` = 0 AND suppn.pn_id = stock.pn_id
  </select>
  
  <select id="getCartListAll" resultMap="PnShoppingCartDO">
  	SELECT cart.id, cart.supply_id, cart.amount, 
  		IFNULL(suppn.`status`,1) status,
  		stock.pn_code, stock.brand_name, stock.mpq, suppn.moq, 
  		IFNULL(stock.stock_quantity, 0) stock_quantity
	FROM (SELECT id, supply_id, amount FROM supply.t_shopping_cart 
		WHERE mem_id = #{memId,jdbcType=INTEGER} 
		ORDER BY update_time DESC
		) cart 
	LEFT JOIN supply.t_pn_supply suppn ON cart.supply_id = suppn.id
	LEFT JOIN spm.t_partnumber_stock stock ON stock.state = 0 AND stock.`status` = 0 AND suppn.pn_id = stock.pn_id
  </select>
  
  <select id="getCartListCount" resultType="java.lang.Integer">
  	SELECT COUNT(1) FROM supply.t_shopping_cart 
		WHERE mem_id = #{memId,jdbcType=INTEGER}
  </select>
  
  <select id="getSupplyListByIds" resultMap="PnShoppingCartDO">
  	SELECT suppn.id AS supply_id, suppn.moq, suppn.`status`, stock.pn_code, 
  		IFNULL(stock.stock_quantity, 0) stock_quantity, stock.brand_name, stock.sp_id
	FROM supply.t_pn_supply suppn
	LEFT JOIN spm.t_partnumber_stock stock ON stock.state = 0 AND stock.`status` = 0 AND suppn.pn_id = stock.pn_id
	WHERE suppn.id IN
		<foreach item="id" index="index" collection="supplyIds" open="("
		separator="," close=")">
		#{id,jdbcType=INTEGER}
	</foreach>
  </select>
  
</mapper>