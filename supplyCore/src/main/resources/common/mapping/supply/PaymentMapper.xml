<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sekorm.core.dao.supply.PaymentMapper" >
  <resultMap id="BaseResultMap" type="com.sekorm.core.model.supply.Payment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="CHAR" />
    <result column="mem_id" property="memId" jdbcType="INTEGER" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="trade_no" property="tradeNo" jdbcType="VARCHAR" />
    <result column="pay_channel" property="payChannel" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_code, mem_id, pay_type, pay_amount, trade_no, pay_channel, status, remark, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_payment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_payment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sekorm.core.model.supply.Payment" >
    insert into t_payment (id, order_code, mem_id, 
      pay_type, pay_amount, trade_no, 
      pay_channel, status, remark, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{orderCode,jdbcType=CHAR}, #{memId,jdbcType=INTEGER}, 
      #{payType,jdbcType=INTEGER}, #{payAmount,jdbcType=REAL}, #{tradeNo,jdbcType=VARCHAR}, 
      #{payChannel,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sekorm.core.model.supply.Payment" >
    insert into t_payment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderCode != null" >
        order_code,
      </if>
      <if test="memId != null" >
        mem_id,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="tradeNo != null" >
        trade_no,
      </if>
      <if test="payChannel != null" >
        pay_channel,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null" >
        #{orderCode,jdbcType=CHAR},
      </if>
      <if test="memId != null" >
        #{memId,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=REAL},
      </if>
      <if test="tradeNo != null" >
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="payChannel != null" >
        #{payChannel,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sekorm.core.model.supply.Payment" >
    update t_payment
    <set >
      <if test="orderCode != null" >
        order_code = #{orderCode,jdbcType=CHAR},
      </if>
      <if test="memId != null" >
        mem_id = #{memId,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=REAL},
      </if>
      <if test="tradeNo != null" >
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="payChannel != null" >
        pay_channel = #{payChannel,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sekorm.core.model.supply.Payment" >
    update t_payment
    set order_code = #{orderCode,jdbcType=CHAR},
      mem_id = #{memId,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=INTEGER},
      pay_amount = #{payAmount,jdbcType=REAL},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      pay_channel = #{payChannel,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  <insert id="insertPay" parameterType="com.sekorm.core.model.supply.Payment" >
    insert into supply.t_payment (order_code, mem_id, pay_type, pay_amount, 
    	trade_no, pay_channel, status, remark, create_time)
    values (#{orderCode,jdbcType=CHAR}, #{memId,jdbcType=INTEGER}, 
      #{payType,jdbcType=INTEGER}, #{payAmount,jdbcType=DOUBLE}, #{tradeNo,jdbcType=VARCHAR}, 
      #{payChannel,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      now())
  </insert>
  <select id="selectByOrderCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from supply.t_payment
    where order_code = #{orderCode,jdbcType=CHAR}     
  </select>
  <update id="updateByOrderCode" parameterType="com.sekorm.core.model.supply.Payment" >
    update supply.t_payment
    set pay_type = #{payType,jdbcType=INTEGER},
      pay_amount = #{payAmount,jdbcType=REAL},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      pay_channel = #{payChannel,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where order_code = #{orderCode,jdbcType=CHAR}
  </update>
  
  <select id="getPaymentComplete" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from supply.t_payment
    where order_code = #{orderCode,jdbcType=CHAR} 
        and status = 1    
        limit 1
  </select>
  
  <select id="getPaymentStatus" resultType="java.lang.Integer" parameterType="java.lang.String" >
  	SELECT status FROM supply.t_payment WHERE order_code = #{orderCode,jdbcType=CHAR} limit 1
  </select>
</mapper>