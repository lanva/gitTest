<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sekorm.core.dao.supply.PnPriceLogMapper" >
  <resultMap id="BaseResultMap" type="com.sekorm.core.model.supply.PnPriceLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="supply_id" property="supplyId" jdbcType="INTEGER" />
    <result column="min_order" property="minOrder" jdbcType="INTEGER" />
    <result column="max_order" property="maxOrder" jdbcType="INTEGER" />
    <result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, supply_id, min_order, max_order, unit_price, creator, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_pn_price_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_pn_price_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sekorm.core.model.supply.PnPriceLog" >
    insert into t_pn_price_log (id, supply_id, min_order, 
      max_order, unit_price, creator, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{supplyId,jdbcType=INTEGER}, #{minOrder,jdbcType=INTEGER}, 
      #{maxOrder,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL}, #{creator,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sekorm.core.model.supply.PnPriceLog" >
    insert into t_pn_price_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="supplyId != null" >
        supply_id,
      </if>
      <if test="minOrder != null" >
        min_order,
      </if>
      <if test="maxOrder != null" >
        max_order,
      </if>
      <if test="unitPrice != null" >
        unit_price,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="supplyId != null" >
        #{supplyId,jdbcType=INTEGER},
      </if>
      <if test="minOrder != null" >
        #{minOrder,jdbcType=INTEGER},
      </if>
      <if test="maxOrder != null" >
        #{maxOrder,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null" >
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sekorm.core.model.supply.PnPriceLog" >
    update t_pn_price_log
    <set >
      <if test="supplyId != null" >
        supply_id = #{supplyId,jdbcType=INTEGER},
      </if>
      <if test="minOrder != null" >
        min_order = #{minOrder,jdbcType=INTEGER},
      </if>
      <if test="maxOrder != null" >
        max_order = #{maxOrder,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null" >
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sekorm.core.model.supply.PnPriceLog" >
    update t_pn_price_log
    set supply_id = #{supplyId,jdbcType=INTEGER},
      min_order = #{minOrder,jdbcType=INTEGER},
      max_order = #{maxOrder,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      creator = #{creator,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    
  <insert id="insertBatch" >
    insert into supply.t_pn_price_log (supply_id, min_order, 
      max_order, unit_price, creator
      ) values 
      <foreach item="p" index="index" collection="prices" separator=",">
      (#{p.supplyId}, #{p.minOrder}, 
      #{p.maxOrder}, #{p.unitPrice}, #{p.creator})
	  </foreach>
  </insert>
  
</mapper>