<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sekorm.core.dao.supply.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.sekorm.core.model.supply.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="CHAR" />
    <result column="mem_id" property="memId" jdbcType="INTEGER" />
    <result column="operator" property="operator" jdbcType="INTEGER" />
    <result column="operate_flag" property="operateFlag" jdbcType="INTEGER" />
    <result column="pay_channel" property="payChannel" jdbcType="INTEGER" />
    <result column="pay_status" property="payStatus" jdbcType="INTEGER" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="goods_post_fee" property="goodsPostFee" jdbcType="DECIMAL" />
    <result column="taxes_rate" property="taxesRate" jdbcType="DECIMAL" />
    <result column="taxes_fee" property="taxesFee" jdbcType="DECIMAL" />
    <result column="goods_amount" property="goodsAmount" jdbcType="DECIMAL" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="deal_amount" property="dealAmount" jdbcType="DECIMAL" />
    <result column="amount_updator" property="amountUpdator" jdbcType="INTEGER" />
    <result column="source" property="source" jdbcType="INTEGER" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="goods_post_type" property="goodsPostType" jdbcType="INTEGER" />
    <result column="goods_area_no" property="goodsAreaNo" jdbcType="INTEGER" />
    <result column="goods_area_name" property="goodsAreaName" jdbcType="VARCHAR" />
    <result column="goods_address" property="goodsAddress" jdbcType="VARCHAR" />
    <result column="goods_receiver" property="goodsReceiver" jdbcType="VARCHAR" />
    <result column="goods_phone" property="goodsPhone" jdbcType="VARCHAR" />
    <result column="invoice_peer" property="invoicePeer" jdbcType="INTEGER" />
    <result column="invoice_type" property="invoiceType" jdbcType="INTEGER" />
    <result column="updator" property="updator" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="claim_time" property="claimTime" jdbcType="TIMESTAMP" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="goods_post_time" property="goodsPostTime" jdbcType="TIMESTAMP" />
    <result column="goods_get_time" property="goodsGetTime" jdbcType="TIMESTAMP" />
    <result column="cancel_time" property="cancelTime" jdbcType="TIMESTAMP" />
    <result column="erp_so" property="erpSo" jdbcType="VARCHAR" />
    <result column="goods_post_num" property="goodsPostNum" jdbcType="VARCHAR" />
    <result column="delivery_detail" property="deliveryDetail" jdbcType="VARCHAR" />
    <result column="mem_email" property="memEmail" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_code, mem_id, operator, operate_flag, pay_channel, pay_status, order_status, 
    goods_post_fee, taxes_rate, taxes_fee, goods_amount, total_amount, 
    deal_amount, amount_updator, source, order_type, goods_post_type, goods_area_no, 
    goods_area_name, goods_address, goods_receiver, goods_phone, invoice_peer, invoice_type, 
    updator, create_time, update_time, claim_time, pay_time, goods_post_time, 
    goods_get_time, cancel_time, erp_so, goods_post_num, delivery_detail, mem_email
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sekorm.core.model.supply.Order" >
    insert into t_order (id, order_code, mem_id, 
      operator, operate_flag, pay_channel, 
      pay_status, order_status, goods_post_fee, taxes_rate, taxes_fee, 
      goods_amount, total_amount, deal_amount, 
      amount_updator, source, order_type, 
      goods_post_type, goods_area_no, goods_area_name, 
      goods_address, goods_receiver, goods_phone, 
      invoice_peer, invoice_type, updator, 
      create_time, update_time, claim_time, 
      pay_time, goods_post_time, goods_get_time, 
      cancel_time, erp_so, goods_post_num, 
      delivery_detail, mem_email)
    values (#{id,jdbcType=INTEGER}, #{orderCode,jdbcType=CHAR}, #{memId,jdbcType=INTEGER}, 
      #{operator,jdbcType=INTEGER}, #{operateFlag,jdbcType=INTEGER}, #{payChannel,jdbcType=INTEGER}, 
      #{payStatus,jdbcType=INTEGER}, #{orderStatus,jdbcType=INTEGER}, #{goodsPostFee,jdbcType=DECIMAL}, 
      #{taxesRate,jdbcType=DECIMAL}, #{taxesFee,jdbcType=DECIMAL}, 
      #{goodsAmount,jdbcType=DECIMAL}, #{totalAmount,jdbcType=DECIMAL}, #{dealAmount,jdbcType=DECIMAL}, 
      #{amountUpdator,jdbcType=INTEGER}, #{source,jdbcType=INTEGER}, #{orderType,jdbcType=INTEGER}, 
      #{goodsPostType,jdbcType=INTEGER}, #{goodsAreaNo,jdbcType=INTEGER}, #{goodsAreaName,jdbcType=VARCHAR}, 
      #{goodsAddress,jdbcType=VARCHAR}, #{goodsReceiver,jdbcType=VARCHAR}, #{goodsPhone,jdbcType=VARCHAR}, 
      #{invoicePeer,jdbcType=INTEGER}, #{invoiceType,jdbcType=INTEGER}, #{updator,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{claimTime,jdbcType=TIMESTAMP}, 
      #{payTime,jdbcType=TIMESTAMP}, #{goodsPostTime,jdbcType=TIMESTAMP}, #{goodsGetTime,jdbcType=TIMESTAMP}, 
      #{cancelTime,jdbcType=TIMESTAMP}, #{erpSo,jdbcType=VARCHAR}, #{goodsPostNum,jdbcType=VARCHAR}, 
      #{deliveryDetail,jdbcType=VARCHAR}, #{memEmail,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sekorm.core.model.supply.Order" >
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderCode != null" >
        order_code,
      </if>
      <if test="memId != null" >
        mem_id,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="operateFlag != null" >
        operate_flag,
      </if>
      <if test="payChannel != null" >
        pay_channel,
      </if>
      <if test="payStatus != null" >
        pay_status,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="goodsPostFee != null" >
        goods_post_fee,
      </if>
      <if test="taxesRate != null" >
        taxes_rate,
      </if>
      <if test="taxesFee != null" >
        taxes_fee,
      </if>
      <if test="goodsAmount != null" >
        goods_amount,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="dealAmount != null" >
        deal_amount,
      </if>
      <if test="amountUpdator != null" >
        amount_updator,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="goodsPostType != null" >
        goods_post_type,
      </if>
      <if test="goodsAreaNo != null" >
        goods_area_no,
      </if>
      <if test="goodsAreaName != null" >
        goods_area_name,
      </if>
      <if test="goodsAddress != null" >
        goods_address,
      </if>
      <if test="goodsReceiver != null" >
        goods_receiver,
      </if>
      <if test="goodsPhone != null" >
        goods_phone,
      </if>
      <if test="invoicePeer != null" >
        invoice_peer,
      </if>
      <if test="invoiceType != null" >
        invoice_type,
      </if>
      <if test="updator != null" >
        updator,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="claimTime != null" >
        claim_time,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="goodsPostTime != null" >
        goods_post_time,
      </if>
      <if test="goodsGetTime != null" >
        goods_get_time,
      </if>
      <if test="cancelTime != null" >
        cancel_time,
      </if>
      <if test="erpSo != null" >
        erp_so,
      </if>
      <if test="goodsPostNum != null" >
        goods_post_num,
      </if>
      <if test="deliveryDetail != null" >
        delivery_detail,
      </if>
      <if test="memEmail != null" >
        mem_email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null" >
        #{orderCode,jdbcType=CHAR},
      </if>
      <if test="memId != null" >
        #{memId,jdbcType=INTEGER},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=INTEGER},
      </if>
      <if test="operateFlag != null" >
        #{operateFlag,jdbcType=INTEGER},
      </if>
      <if test="payChannel != null" >
        #{payChannel,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null" >
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="goodsPostFee != null" >
        #{goodsPostFee,jdbcType=DECIMAL},
      </if>
      <if test="taxesRate != null" >
        #{taxesRate,jdbcType=DECIMAL},
      </if>
      <if test="taxesFee != null" >
        #{taxesFee,jdbcType=DECIMAL},
      </if>
      <if test="goodsAmount != null" >
        #{goodsAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="dealAmount != null" >
        #{dealAmount,jdbcType=DECIMAL},
      </if>
      <if test="amountUpdator != null" >
        #{amountUpdator,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        #{source,jdbcType=INTEGER},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="goodsPostType != null" >
        #{goodsPostType,jdbcType=INTEGER},
      </if>
      <if test="goodsAreaNo != null" >
        #{goodsAreaNo,jdbcType=INTEGER},
      </if>
      <if test="goodsAreaName != null" >
        #{goodsAreaName,jdbcType=VARCHAR},
      </if>
      <if test="goodsAddress != null" >
        #{goodsAddress,jdbcType=VARCHAR},
      </if>
      <if test="goodsReceiver != null" >
        #{goodsReceiver,jdbcType=VARCHAR},
      </if>
      <if test="goodsPhone != null" >
        #{goodsPhone,jdbcType=VARCHAR},
      </if>
      <if test="invoicePeer != null" >
        #{invoicePeer,jdbcType=INTEGER},
      </if>
      <if test="invoiceType != null" >
        #{invoiceType,jdbcType=INTEGER},
      </if>
      <if test="updator != null" >
        #{updator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="claimTime != null" >
        #{claimTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsPostTime != null" >
        #{goodsPostTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsGetTime != null" >
        #{goodsGetTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelTime != null" >
        #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="erpSo != null" >
        #{erpSo,jdbcType=VARCHAR},
      </if>
      <if test="goodsPostNum != null" >
        #{goodsPostNum,jdbcType=VARCHAR},
      </if>
      <if test="deliveryDetail != null" >
        #{deliveryDetail,jdbcType=VARCHAR},
      </if>
      <if test="memEmail != null" >
        #{memEmail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sekorm.core.model.supply.Order" >
    update t_order
    <set >
      <if test="orderCode != null" >
        order_code = #{orderCode,jdbcType=CHAR},
      </if>
      <if test="memId != null" >
        mem_id = #{memId,jdbcType=INTEGER},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=INTEGER},
      </if>
      <if test="operateFlag != null" >
        operate_flag = #{operateFlag,jdbcType=INTEGER},
      </if>
      <if test="payChannel != null" >
        pay_channel = #{payChannel,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null" >
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="goodsPostFee != null" >
        goods_post_fee = #{goodsPostFee,jdbcType=DECIMAL},
      </if>
      <if test="taxesRate != null" >
        taxes_rate = #{taxesRate,jdbcType=DECIMAL},
      </if>
      <if test="taxesFee != null" >
        taxes_fee = #{taxesFee,jdbcType=DECIMAL},
      </if>
      <if test="goodsAmount != null" >
        goods_amount = #{goodsAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="dealAmount != null" >
        deal_amount = #{dealAmount,jdbcType=DECIMAL},
      </if>
      <if test="amountUpdator != null" >
        amount_updator = #{amountUpdator,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="goodsPostType != null" >
        goods_post_type = #{goodsPostType,jdbcType=INTEGER},
      </if>
      <if test="goodsAreaNo != null" >
        goods_area_no = #{goodsAreaNo,jdbcType=INTEGER},
      </if>
      <if test="goodsAreaName != null" >
        goods_area_name = #{goodsAreaName,jdbcType=VARCHAR},
      </if>
      <if test="goodsAddress != null" >
        goods_address = #{goodsAddress,jdbcType=VARCHAR},
      </if>
      <if test="goodsReceiver != null" >
        goods_receiver = #{goodsReceiver,jdbcType=VARCHAR},
      </if>
      <if test="goodsPhone != null" >
        goods_phone = #{goodsPhone,jdbcType=VARCHAR},
      </if>
      <if test="invoicePeer != null" >
        invoice_peer = #{invoicePeer,jdbcType=INTEGER},
      </if>
      <if test="invoiceType != null" >
        invoice_type = #{invoiceType,jdbcType=INTEGER},
      </if>
      <if test="updator != null" >
        updator = #{updator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="claimTime != null" >
        claim_time = #{claimTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsPostTime != null" >
        goods_post_time = #{goodsPostTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsGetTime != null" >
        goods_get_time = #{goodsGetTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelTime != null" >
        cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="erpSo != null" >
        erp_so = #{erpSo,jdbcType=VARCHAR},
      </if>
      <if test="goodsPostNum != null" >
        goods_post_num = #{goodsPostNum,jdbcType=VARCHAR},
      </if>
      <if test="deliveryDetail != null" >
        deliveryDetail = #{invoicePostNum,jdbcType=VARCHAR},
      </if>
      <if test="memEmail != null" >
        mem_email = #{memEmail,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sekorm.core.model.supply.Order" >
    update t_order
    set order_code = #{orderCode,jdbcType=CHAR},
      mem_id = #{memId,jdbcType=INTEGER},
      operator = #{operator,jdbcType=INTEGER},
      operate_flag = #{operateFlag,jdbcType=INTEGER},
      pay_channel = #{payChannel,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=INTEGER},
      order_status = #{orderStatus,jdbcType=INTEGER},
      goods_post_fee = #{goodsPostFee,jdbcType=DECIMAL},
      taxes_rate = #{taxesRate,jdbcType=DECIMAL},
      taxes_fee = #{taxesFee,jdbcType=DECIMAL},
      goods_amount = #{goodsAmount,jdbcType=DECIMAL},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      deal_amount = #{dealAmount,jdbcType=DECIMAL},
      amount_updator = #{amountUpdator,jdbcType=INTEGER},
      source = #{source,jdbcType=INTEGER},
      order_type = #{orderType,jdbcType=INTEGER},
      goods_post_type = #{goodsPostType,jdbcType=INTEGER},
      goods_area_no = #{goodsAreaNo,jdbcType=INTEGER},
      goods_area_name = #{goodsAreaName,jdbcType=VARCHAR},
      goods_address = #{goodsAddress,jdbcType=VARCHAR},
      goods_receiver = #{goodsReceiver,jdbcType=VARCHAR},
      goods_phone = #{goodsPhone,jdbcType=VARCHAR},
      invoice_peer = #{invoicePeer,jdbcType=INTEGER},
      invoice_type = #{invoiceType,jdbcType=INTEGER},
      updator = #{updator,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      claim_time = #{claimTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      goods_post_time = #{goodsPostTime,jdbcType=TIMESTAMP},
      goods_get_time = #{goodsGetTime,jdbcType=TIMESTAMP},
      cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      erp_so = #{erpSo,jdbcType=VARCHAR},
      goods_post_num = #{goodsPostNum,jdbcType=VARCHAR},
      delivery_detail = #{deliveryDetail,jdbcType=VARCHAR},
      mem_email = #{memEmail,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <resultMap id="OrderDTO" type="com.sekorm.core.dto.supply.OrderDTO" >
    <id column="id" property="id" javaType="Integer" />
    <result column="order_code" property="orderCode" javaType="String" />
    <result column="deal_amount" property="dealAmount" javaType="DECIMAL" />
    <result column="mem_id" property="memId" javaType="Integer" />
    <result column="pay_channel" property="payChannel" javaType="Integer" />
    <result column="pay_status" property="payStatus" javaType="Integer" />
    <result column="goods_post_type" property="goodsPostType" javaType="Integer" />
    <result column="invoice_type" property="invoiceType" javaType="Integer" />         
    <result column="create_time" property="createTime" javaType="Date" />
    <result column="updator" property="updator" javaType="String" />
    <result column="update_time" property="updateTime" javaType="Date" />
    <result column="operator" property="operator" javaType="String" />
    <result column="operate_flag" property="operateFlag" javaType="Integer" />
    <result column="order_status" property="orderStatus" javaType="Integer" />
    <result column="companyName" property="companyName" javaType="String" />     
    <result column="email" property="email" javaType="String" />    
    <result column="total_Amount" property="totalAmount" javaType="DECIMAL" />   
  </resultMap>
  
  
  
  <!-- [列表记录总数] -->
  <select id="getPageListCount" resultType="java.lang.Integer" >
	SELECT COUNT(1) FROM 	
	  (  <include refid="selectPageListParam"/> ) ord
  </select>
     
  <select id="getPageList" resultMap="OrderDTO" >
      SELECT ord.id, ord.order_code, ord.deal_amount, ord.mem_id,
             ord.pay_channel,ord.pay_status,ord.goods_post_type,ord.invoice_type,
             ord.create_time,us2.truename updator,ord.update_time,us1.truename operator,
             ord.operate_flag,ord.order_status,ord.total_amount,
             mem.company_name companyName, mem.email email	 
	     FROM ( <include refid="selectPageListParam"/> 
	            order by create_time desc
	            LIMIT #{param.iDisplayStart}, #{param.iDisplayLength}
		      ) ord
		LEFT JOIN member.t_member mem ON ord.mem_id = mem.id
		LEFT JOIN usm.t_user us1 ON ord.operator = us1.id
		LEFT JOIN usm.t_user us2 ON ord.updator = us2.id		
   </select>
  
  <sql id="selectPageListParam">
          SELECT id, order_code, deal_amount, mem_id,
               pay_channel, pay_status,goods_post_type, invoice_type,
		       create_time, updator, update_time, operator,
		       operate_flag,order_status,total_amount
		       FROM supply.t_order 
               WHERE order_type = 1                
               <if test="param.operator != null ">
		          AND operator = #{param.operator,jdbcType=INTEGER}
	           </if>
               <if test="param.strOperateFlag != null and param.strOperateFlag !=''">		   
		          and find_in_set(operate_flag,#{param.strOperateFlag})
		       </if>	
		       <if test="param.strPayStatus != null and param.strPayStatus !=''">
		          AND find_in_set(pay_status,#{param.strPayStatus})
	           </if>
			   <if test="param.strOrderStatus != null and param.strOrderStatus !=''">
				  AND find_in_set(order_status,#{param.strOrderStatus})
			   </if>	
			   	<if test="param.pageType != null and param.pageType ==1">
				  AND (operate_flag =0 and not (order_status=3 or order_status=4))
			   </if>		 
               <if test="param.paramType != null and param.paramValue != null and param.paramValue !='' ">
					 <choose>			    
						<when test="param.paramType == 2">
						AND EXISTS (SELECT 1 FROM member.t_member WHERE supply.t_order.mem_id = id AND company_name LIKE CONCAT('%',#{param.paramValue},'%'))
						</when>
						<when test="param.paramType == 3">
						AND mem_id = #{param.paramValue}
						</when>
						<when test="param.paramType == 4">
						AND order_code LIKE CONCAT('%',#{param.paramValue},'%')
						</when>
						<when test="param.paramType == 5 ">
						AND EXISTS (SELECT 1 FROM usm.t_user WHERE supply.t_order.updator = id AND truename LIKE CONCAT('%',#{param.paramValue},'%'))
						</when>	
						<when test="param.paramType == 6">
						AND EXISTS (SELECT 1 FROM usm.t_user WHERE supply.t_order.operator = id AND truename LIKE CONCAT('%',#{param.paramValue},'%'))
						</when>				
					</choose>
	           </if>
	           <if test="param.timeType != null">      
					<choose>
					 <when test="param.timeType == 1">
					    <if test="param.startTime != null and param.startTime != ''">
					       AND create_time <![CDATA[>=]]> #{param.startTime,jdbcType=VARCHAR}
					    </if>
					    <if test="param.endTime != null and param.endTime != ''">
					       AND create_time <![CDATA[<=]]> concat(#{param.endTime,jdbcType=VARCHAR},' 23:59:59')
					    </if>			 
					 </when>
					 <when test="param.timeType == 2">
					    <if test="param.startTime != null and param.startTime != ''">
					       AND update_time <![CDATA[>=]]> #{param.startTime,jdbcType=VARCHAR}
					    </if>
					    <if test="param.endTime != null and param.endTime != ''">
					       AND update_time <![CDATA[<=]]> concat(#{param.endTime,jdbcType=VARCHAR},' 23:59:59')
					    </if>		   		
					 </when>
					 <when test="param.timeType == 3">
					    <if test="param.startTime != null and param.startTime != ''">
					       AND claim_time <![CDATA[>=]]> #{param.startTime,jdbcType=VARCHAR}
					    </if>
					    <if test="param.endTime != null and param.endTime != ''">
					       AND claim_time <![CDATA[<=]]> concat(#{param.endTime,jdbcType=VARCHAR},' 23:59:59')
					    </if>			
					 </when>
					</choose>
			   </if>   	 
               <if test="param.spId != null or (param.brandName != null and param.brandName != '') or (param.paramType != null and param.paramType == 1 and param.paramValue != null and param.paramValue != '')">
				  AND EXISTS (SELECT 1 FROM supply.t_order_detail WHERE supply.t_order.order_code = order_code 
						<if test="param.spId != null">
						AND sp_id = #{param.spId,jdbcType=INTEGER}
						</if>
						<if test="param.brandName != null and param.brandName != ''">
						AND brand_name = #{param.brandName,jdbcType=VARCHAR}
						</if>
						<if test="param.paramType != null and param.paramType == 1 and param.paramValue != null and param.paramValue != ''">
						AND pn_code LIKE CONCAT('%',#{param.paramValue},'%')
						</if> 
				   )
				</if>					   
  </sql>
  
  
  <!-- [根据订单号查询订单信息] -->
  <select id="getByOrderCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where order_type = 1 AND order_code = #{orderCode,jdbcType=CHAR}
  </select>
  
   <!-- [根据订单号设置后台处理认领状态] -->
  <update id="setOperateFlag" parameterType="com.sekorm.core.model.supply.Order" >
    update t_order
    set      
      operator = #{record.operator,jdbcType=INTEGER},
      operate_flag = #{record.operateFlag,jdbcType=INTEGER},     
      claim_time = #{record.claimTime,jdbcType=TIMESTAMP},
      updator = #{record.updator,jdbcType=INTEGER},    
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}          
    where order_type = 1 AND order_code = #{record.orderCode,jdbcType=CHAR} 
      <if test="type == 0">
	       and operate_flag = 1 and not (order_status=3 or order_status=4)
	   </if> 
	   <if test="type == 1">
	       and operate_flag = 0 and not (order_status=3 or order_status=4)
	   </if>	     
  </update>  
  
  <!-- [会员自己取消订单] -->
  <update id="memberCancelOrder">
    update supply.t_order
      set order_status = 4, cancel_time = CURRENT_TIMESTAMP,
      <if test="updateTime != null" >
        update_time = #{updateTime}
      </if>
    where mem_id = #{memId} AND order_code = #{orderCode}
          and pay_status &lt;&gt; 1
  </update>
  <!-- [会员自己确认订单] -->
  <update id="memconfirmOrder">
    update supply.t_order
      set order_status = 3, goods_get_time = CURRENT_TIMESTAMP, 
      <if test="updateTime != null" >
        update_time = #{updateTime}
      </if>
    where mem_id = #{memId} AND order_code = #{orderCode}
          and order_status = 2
  </update>
  
  <!-- [更新订单为支付成功] -->
  <update id="orderPaymentOk">
    update supply.t_order
      set pay_status = 1, pay_channel = #{payChannel}, pay_time = CURRENT_TIMESTAMP, 
      <if test="updateTime != null" >
        update_time = #{updateTime}
      </if>
    where order_code = #{orderCode}
  </update>
  
  <!-- [确认付款（银行汇款）] -->
  <update id="confirmPayment" parameterType="com.sekorm.core.model.supply.Order" >
    update t_order
      set
        pay_channel = #{record.payChannel,jdbcType=INTEGER},     
        pay_status = #{record.payStatus,jdbcType=INTEGER},     
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},       
        updator = #{record.updator,jdbcType=INTEGER},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}   
    where order_type = 1 AND order_code = #{record.orderCode,jdbcType=CHAR}
          and pay_status <![CDATA[<>]]> 1  and order_status = 0
          and operate_flag <![CDATA[>]]> 0                       
  </update>
  <!-- [ 更新订单状态 ] -->
  <update id="setOrderStatus" parameterType="com.sekorm.core.model.supply.Order" >
    update t_order
    <set >                       
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>        
      <if test="record.updator != null" >
        updator = #{record.updator,jdbcType=INTEGER},
      </if>      
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>      
      <if test="record.goodsPostNum != null" >
        goods_post_num = #{record.goodsPostNum,jdbcType=VARCHAR},
      </if>
      <if test="record.memEmail != null" >
        mem_email = #{record.memEmail,jdbcType=VARCHAR},
      </if>  
      <if test="record.cancelTime != null" >
        cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsPostTime != null" >
        goods_post_time = #{record.goodsPostTime,jdbcType=TIMESTAMP},
      </if>    
      <if test="record.goodsGetTime != null" >
        goods_get_time = #{record.goodsGetTime,jdbcType=TIMESTAMP},
      </if>       
      <if test="record.erpSo != null" >
        erp_so = #{record.erpSo,jdbcType=VARCHAR},
      </if>
    </set>
    where order_type = 1 AND order_code = #{record.orderCode,jdbcType=CHAR}
          and not (order_status = 3 or order_status = 4)
          and operate_flag > 0          
          <if test="oldStatus != null" >
             and order_status = #{oldStatus,jdbcType=INTEGER}
          </if>              
          <if test="record.orderStatus == 1 or record.orderStatus == 2 or record.orderStatus == 3" >
             and pay_status = 1 
          </if>              
  </update>
  
  <!-- [ 申请优惠价 ] -->
  <update id="setOrderDealAmount" parameterType="com.sekorm.core.model.supply.Order" >
    update t_order
    set                
        deal_amount = #{record.dealAmount,jdbcType=DECIMAL},                 
        updator = #{record.updator,jdbcType=INTEGER},          
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},      
        amount_updator = #{record.amountUpdator,jdbcType=INTEGER}      
    where order_type = 1 AND order_code = #{record.orderCode,jdbcType=CHAR}           
          and pay_status <![CDATA[<>]]> 1  and order_status = 0
          and operate_flag <![CDATA[>]]> 0           
  </update>
  
  <!-- [ 修改收货地址和发票信息 ] -->
  <update id="setAddressAndInvoice" parameterType="com.sekorm.core.model.supply.Order" >
    update t_order
    <set >  
      <if test="record.goodsPostFee != null" >
        goods_post_fee = #{record.goodsPostFee,jdbcType=DECIMAL},
      </if>     
      <if test="record.taxesRate != null" >
        taxes_rate = #{record.taxesRate,jdbcType=DECIMAL},
      </if>
      <if test="record.taxesFee != null" >
        taxes_fee = #{record.taxesFee,jdbcType=DECIMAL},
      </if>      
      <if test="record.goodsAmount != null" >
        goods_amount = #{record.goodsAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalAmount != null" >
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>               
      <if test="record.goodsAreaNo != null" >
        goods_area_no = #{record.goodsAreaNo,jdbcType=INTEGER},
      </if>
      <if test="record.goodsAreaName != null" >
        goods_area_name = #{record.goodsAreaName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsAddress != null" >
        goods_address = #{record.goodsAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsReceiver != null" >
        goods_receiver = #{record.goodsReceiver,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPhone != null" >
        goods_phone = #{record.goodsPhone,jdbcType=VARCHAR},
      </if>       
      <if test="record.invoicePeer != null" >
        invoice_peer = #{record.invoicePeer,jdbcType=INTEGER},
      </if>
      <if test="record.invoiceType != null" >
        invoice_type = #{record.invoiceType,jdbcType=INTEGER},
      </if>          
      <if test="record.updator != null" >
        updator = #{record.updator,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>        
    </set>
    where order_type = 1 AND order_code = #{record.orderCode,jdbcType=CHAR}
          and (order_status = 0 or order_status =1)
          and operate_flag <![CDATA[>]]> 0                   
  </update>
  
<!-- 已发货订单 -->
  <select id="getOrderStautsDelivered" resultType="java.util.HashMap">
    SELECT order_code orderCode
       FROM t_order 
         where order_type = 1
               and order_status=2
               <if test="goodsPostTime != null and goodsPostTime != ''" >
                  and goods_post_time <![CDATA[<=]]> #{goodsPostTime,jdbcType=VARCHAR}
               </if>
  </select>
  <!-- 系统自动确认收货 -->
  <update id="setOrderStautsAutoComplete" >
    update t_order
    set                
        order_status = 3,         
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            goods_get_time =#{record.goodsGetTime,jdbcType=TIMESTAMP}                                
          where order_type = 1
               and order_status=2
               and order_code = #{record.orderCode,jdbcType=VARCHAR}                   
  </update>  
  
 <!--  获取用户信息 -->
 <select id="getUserInfo" resultType="java.util.HashMap" parameterType="java.lang.Integer" >
      select username,truename,email,telephone,mobile,dept_name deptName,position 
           from usm.t_user where id= #{id,jdbcType=INTEGER}      
  </select>
  
  <!-- [查询所有品牌列表] -->
  <select id="getBrandNameList" resultType="java.lang.String" >
    SELECT DISTINCT brand_name FROM spm.t_partnumber where state = 0 AND `status` = 0 
  </select>
  
  <!-- [查询所有服务商id、name列表] -->
  <select id="getSpInfoList" resultType="java.util.HashMap" >
    SELECT id, `name` FROM spm.t_sp_info WHERE state = 0
  </select>
  
  <resultMap id="OrderFrontDO" type="com.sekorm.dubbo.beans.isupply.OrderFrontDO" >
    <result column="order_code" property="orderCode" jdbcType="VARCHAR" />
    <result column="pay_status" property="payStatus" jdbcType="INTEGER" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="deal_amount" property="dealAmount" jdbcType="DECIMAL" />
    <result column="goods_post_fee" property="goodsPostFee" jdbcType="DECIMAL" />
    <result column="taxes_fee" property="taxesFee" jdbcType="DECIMAL" />
    <result column="goods_amount" property="goodsAmount" jdbcType="DECIMAL" />
    <result column="payChannelName" property="payChannelName" jdbcType="VARCHAR" />
    <result column="operatorName" property="operatorName" jdbcType="VARCHAR" />
    <result column="operatorPhone" property="operatorPhone" jdbcType="VARCHAR" />
    <result column="operatorEmail" property="operatorEmail" jdbcType="VARCHAR" />
    <result column="goodsPostName" property="goodsPostName" jdbcType="VARCHAR" />
    <result column="goods_area_name" property="goodsAreaName" jdbcType="VARCHAR" />
    <result column="goods_address" property="goodsAddress" jdbcType="VARCHAR" />
    <result column="goods_receiver" property="goodsReceiver" jdbcType="VARCHAR" />
    <result column="goods_phone" property="goodsPhone" jdbcType="VARCHAR" />
    <result column="invoice_peer" property="invoicePeer" jdbcType="INTEGER" />
    <result column="invoice_type" property="invoiceType" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="goods_post_time" property="goodsPostTime" jdbcType="TIMESTAMP" />
    <result column="goods_get_time" property="goodsGetTime" jdbcType="TIMESTAMP" />
    <result column="cancel_time" property="cancelTime" jdbcType="TIMESTAMP" />
    <result column="goods_post_num" property="goodsPostNum" jdbcType="VARCHAR" />
  </resultMap>
  <select id="getOrderFrontDO" resultMap="OrderFrontDO" >
  	  SELECT o.order_code, o.pay_status, o.order_status, IF(o.deal_amount = 0, o.total_amount, o.deal_amount) deal_amount, 
             o.goods_post_fee, o.taxes_fee, o.goods_amount, 
             IF(o.pay_channel > 2, '支付宝', IF(o.pay_channel > 0, '微信支付', '')) payChannelName,
             us.truename operatorName, us.telephone operatorPhone, us.email operatorEmail,
             IF(o.goods_post_type=0, '顺丰速运', '圆通') goodsPostName,
             o.goods_area_name, o.goods_address, o.goods_receiver, o.goods_phone,
             o.invoice_peer, o.invoice_type, o.goods_post_num,
             o.create_time, o.pay_time, 
             o.goods_post_time, o.goods_get_time, o.cancel_time
      FROM supply.t_order o
      LEFT JOIN usm.t_user us ON o.operator = us.id
      WHERE order_type = 1 AND o.mem_id = #{memId} AND o.order_code = #{orderCode}
  </select>
  
  <select id="frontPageList" resultMap="OrderFrontDO" >
      SELECT order_code, pay_status, order_status, 
      		 IF(deal_amount = 0, total_amount, deal_amount) deal_amount, 
             IF(pay_channel > 2, '支付宝', IF(pay_channel > 0, '微信支付', '')) payChannelName,
             goods_post_fee, taxes_fee, create_time
	    FROM supply.t_order 
	    WHERE order_type = 1 AND mem_id = #{param.memId}
	    <if test="param.orderStatus != null">
		    <if test="param.orderStatus == 0">
		       and pay_status = 0 AND order_status &lt; 2
		    </if>
		    <if test="param.orderStatus == 2">
		       and (order_status = 2 OR (order_status &lt; 2 AND pay_status = 1))
		    </if>
		    <if test="param.orderStatus == 3 or param.orderStatus == 4">
		       and order_status = #{param.orderStatus}
		    </if>
	    </if>
		order by create_time desc
	    <if test="param.pageSize != null and param.pageNo != null">
		LIMIT #{param.iDisplayStart}, #{param.pageSize}
	    </if>
  </select>
  <select id="frontPageListCount" resultType="java.lang.Integer" >
      SELECT COUNT(1) FROM supply.t_order 
	    WHERE order_type = 1 AND mem_id = #{param.memId}
	     <if test="param.orderStatus != null">
		    <if test="param.orderStatus == 0">
		       and pay_status = 0 AND order_status &lt; 2
		    </if>
		    <if test="param.orderStatus == 2">
		       and (order_status = 2 OR (order_status &lt; 2 AND pay_status = 1))
		    </if>
		    <if test="param.orderStatus == 3 or param.orderStatus == 4">
		       and order_status = #{param.orderStatus}
		    </if>
	    </if>
  </select>
  <select id="getOrderStatusList" parameterType="java.lang.Integer" resultType="java.util.HashMap" >
	  SELECT 
		MAX(IF(orderStatus=0, count, 0)) AS pending, 
		MAX(IF(orderStatus=2, count, 0)) AS shipped, 
		MAX(IF(orderStatus=3, count, 0)) AS completed, 
		MAX(IF(orderStatus=4, count, 0)) AS canceled
		FROM (
			SELECT 0 AS orderStatus, COUNT(0) count FROM supply.t_order WHERE mem_id = #{memId} AND pay_status = 0 AND order_status &lt; 2
			UNION
			SELECT 2 AS orderStatus, COUNT(0) count FROM supply.t_order WHERE mem_id = #{memId} AND (order_status = 2 OR (order_status &lt; 2 AND pay_status = 1))
			UNION
			SELECT order_status AS orderStatus, COUNT(0) count FROM supply.t_order WHERE mem_id = #{memId} AND order_status IN (3,4) GROUP BY order_status
	  ) a
  </select>
  
</mapper>