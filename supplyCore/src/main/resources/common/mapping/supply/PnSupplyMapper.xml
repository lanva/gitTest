<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sekorm.core.dao.supply.PnSupplyMapper" >
  <resultMap id="BaseResultMap" type="com.sekorm.core.model.supply.PnSupply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sales_unit" property="salesUnit" jdbcType="INTEGER" />
    <result column="pn_code" property="pnCode" jdbcType="VARCHAR" />
    <result column="pn_id" property="pnId" jdbcType="INTEGER" />
    <result column="delivery_day" property="deliveryDay" jdbcType="INTEGER" />
    <result column="freight_price" property="freightPrice" jdbcType="DECIMAL" />
    <result column="moq" property="moq" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="updator" property="updator" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, sales_unit, pn_code, pn_id, delivery_day, freight_price, moq, status, creator, 
    updator, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_pn_supply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_pn_supply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sekorm.core.model.supply.PnSupply" >
    insert into t_pn_supply (id, sales_unit, pn_code, 
      pn_id, delivery_day, freight_price, 
      moq, status, creator, 
      updator, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{salesUnit,jdbcType=INTEGER}, #{pnCode,jdbcType=VARCHAR}, 
      #{pnId,jdbcType=INTEGER}, #{deliveryDay,jdbcType=INTEGER}, #{freightPrice,jdbcType=DECIMAL}, 
      #{moq,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{creator,jdbcType=INTEGER}, 
      #{updator,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <!-- 新增返回id useGeneratedKeys="true" keyProperty="id" -->
  <insert id="insertSelective" parameterType="com.sekorm.core.model.supply.PnSupply" useGeneratedKeys="true" keyProperty="id" >
    insert into t_pn_supply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="salesUnit != null" >
        sales_unit,
      </if>
      <if test="pnCode != null" >
        pn_code,
      </if>
      <if test="pnId != null" >
        pn_id,
      </if>
      <if test="deliveryDay != null" >
        delivery_day,
      </if>
      <if test="freightPrice != null" >
        freight_price,
      </if>
      <if test="moq != null" >
        moq,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="updator != null" >
        updator,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="salesUnit != null" >
        #{salesUnit,jdbcType=INTEGER},
      </if>
      <if test="pnCode != null" >
        #{pnCode,jdbcType=VARCHAR},
      </if>
      <if test="pnId != null" >
        #{pnId,jdbcType=INTEGER},
      </if>
      <if test="deliveryDay != null" >
        #{deliveryDay,jdbcType=INTEGER},
      </if>
      <if test="freightPrice != null" >
        #{freightPrice,jdbcType=DECIMAL},
      </if>
      <if test="moq != null" >
        #{moq,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="updator != null" >
        #{updator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sekorm.core.model.supply.PnSupply" >
    update t_pn_supply
    <set >
      <if test="salesUnit != null" >
        sales_unit = #{salesUnit,jdbcType=INTEGER},
      </if>
      <if test="pnCode != null" >
        pn_code = #{pnCode,jdbcType=VARCHAR},
      </if>
      <if test="pnId != null" >
        pn_id = #{pnId,jdbcType=INTEGER},
      </if>
      <if test="deliveryDay != null" >
        delivery_day = #{deliveryDay,jdbcType=INTEGER},
      </if>
      <if test="freightPrice != null" >
        freight_price = #{freightPrice,jdbcType=DECIMAL},
      </if>
      <if test="moq != null" >
        moq = #{moq,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="updator != null" >
        updator = #{updator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sekorm.core.model.supply.PnSupply" >
    update t_pn_supply
    set sales_unit = #{salesUnit,jdbcType=INTEGER},
      pn_code = #{pnCode,jdbcType=VARCHAR},
      pn_id = #{pnId,jdbcType=INTEGER},
      delivery_day = #{deliveryDay,jdbcType=INTEGER},
      freight_price = #{freightPrice,jdbcType=DECIMAL},
      moq = #{moq,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      creator = #{creator,jdbcType=INTEGER},
      updator = #{updator,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
<select id="selectByPnId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_pn_supply
    where pn_id = #{pnId,jdbcType=INTEGER}
  </select>
  
   <select id="selectByPartnumberId" resultType="java.util.HashMap" parameterType="java.lang.Integer" >
      <include refid="selectPartnumberStock"/>
          and stock.stock_quantity>0
          and spmpn.id = #{pnId,jdbcType=INTEGER}
       limit 1
  </select>
  <select id="selectPnAndStock" resultType="java.util.HashMap" parameterType="java.lang.Integer" >
      <include refid="selectPartnumberStock"/>          
          and spmpn.id = #{pnId,jdbcType=INTEGER}
       limit 1
  </select>
  
   <select id="getParatnumberAndPnInfo" resultType="java.util.HashMap" parameterType="java.lang.Integer" >
      select part.pn_code pnCode,part.brand_name brandName,sp.name spName from spm.t_partnumber part 
       left join spm.t_sp_info sp on part.sp_id = sp.id
       where part.id = #{pnId,jdbcType=INTEGER}
  </select>
  
   

    
  <resultMap id="PnSupplyDTO" type="com.sekorm.core.dto.supply.PnSupplyDTO">
    <result column="supplyId" property="supplyId" javaType="Integer" />
    <result column="pnId" property="pnId" javaType="Integer" />
    <result column="pnCode" property="pnCode" javaType="String" />
    <result column="spName" property="spName" javaType="String" />
    <result column="brandName" property="brandName" javaType="String" />
    <result column="productLine" property="productLine" javaType="String" />
    <result column="stockQuantity" property="stockQuantity" javaType="Integer" />
    <result column="deliveryDay" property="deliveryDay" javaType="Date" />
    <result column="status" property="status" javaType="Integer" />
    <result column="update_time" property="updateTime" javaType="Date" />
    <result column="moq" property="moq" javaType="Integer" />
    <result column="szStockQuantity" property="szStockQuantity" javaType="Integer" />
  </resultMap>
  
  
  
<!--<resultMap id="PnSupplyChannelDO" type="com.sekorm.dubbo.beans.isupply.PnSupplyChannelDO">
    <result column="supplyId" property="supplyId" javaType="Integer" />
    <result column="sp_id" property="spId" javaType="Integer" />
    <result column="pn_code" property="pnCode" javaType="String" />
    <result column="brand_name" property="brand" javaType="String" />
    <result column="stock_quantity" property="pcs" javaType="Integer" />
    <result column="minPackAmount" property="minPackAmount" javaType="Integer" />
    <result column="minOrderAmount" property="minOrderAmount" javaType="Integer" />
    <result column="status" property="status" javaType="Integer" />
  </resultMap>
  <insert id="insertAndGetId" useGeneratedKeys="true" keyProperty="id" parameterType="com.sekorm.core.model.supply.PnSupply" >
    insert into t_pn_supply (sales_unit, pn_code, 
      pn_id, freight_price, 
      status, creator, updator, 
      create_time, update_time)
    values (#{salesUnit,jdbcType=INTEGER}, #{pnCode,jdbcType=VARCHAR}, 
      #{pnId,jdbcType=INTEGER}, #{freightPrice,jdbcType=REAL}, 
      1, #{creator,jdbcType=INTEGER}, #{creator,jdbcType=INTEGER}, 
      now(), now())
  </insert> -->
  
<!--   <update id="updatePnStatus" >
    update supply.t_pn_supply
    set status = #{status,jdbcType=INTEGER},
      updator = #{updator,jdbcType=INTEGER},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update> -->
  <!--
  <select id="getCountByPnId" resultType="java.util.Map">
  SELECT sup.supCount, spm.spmCount FROM
	(SELECT COUNT(1) supCount FROM supply.t_pn_supply 
		WHERE pn_id = #{pnId,jdbcType=INTEGER} 
	  	AND sales_unit = 1) sup,
	(SELECT COUNT(1) spmCount FROM spm.t_partnumber 
		WHERE id = #{pnId,jdbcType=INTEGER} AND state = 0 AND `status` = 0) spm
  </select>
  -->
  
  
  <select id="getPageListCount" resultType="java.lang.Integer" >
	SELECT COUNT(1) FROM 	
	 <include refid="selectPageListParam"/> 
  </select>
  
  <select id="getPageList" resultMap="PnSupplyDTO" >
  select suppn.id supplyId,spmpn.id pnId,spmpn.pn_code pnCode,spInfo.name spName,
	       spmpn.brand_name brandName, spmpn.product_line productLine,
	       stock.stock_quantity stockQuantity, stock.delivery_day deliveryDay, stock.sz_stock_quantity szStockQuantity,
               ifnull(suppn.status,2) status, suppn.update_time, ifnull(suppn.moq,1) moq    
	FROM 
	   <include refid="selectPageListParam"/> 
	ORDER BY spmpn.update_time desc   
	LIMIT #{param.iDisplayStart,jdbcType=INTEGER}, #{param.iDisplayLength,jdbcType=INTEGER} 	
  </select>           
       
  <sql id="selectPartnumberStock">
     SELECT spmpn.id, stock.stock_quantity stockQuantity, stock.delivery_day deliveryDay, 
            spmpn.pn_code pnCode, spmpn.sp_id spId, spmpn.brand_name brandName, spmpn.product_line productLine
		FROM spm.t_partnumber spmpn
		LEFT JOIN spm.t_partnumber_stock stock on spmpn.id = stock.pn_id
		WHERE spmpn.state = 0 AND spmpn.`status` = 0 
  </sql> 
  
  <sql id="selectPageListParam">
	 spm.t_partnumber spmpn
		left join spm.t_partnumber_stock stock on spmpn.id = stock.pn_id	
		left join supply.t_pn_supply suppn on suppn.sales_unit = 1 and spmpn.id = suppn.pn_id	   
		left join spm.t_sp_info spInfo on spInfo.id = spmpn.sp_id
		where spmpn.state = 0 and spmpn.`status` = 0  		
		<if test="param.spId != null">
			AND spmpn.sp_id=#{param.spId,jdbcType=INTEGER}
		</if>
		<if test="param.brandName != null and param.brandName != ''">
			AND spmpn.brand_name = #{param.brandName,jdbcType=VARCHAR}
		</if>
		<if test="param.paramType != null and param.paramValue != null and param.paramValue != '' and param.paramType == 1">
			AND spmpn.pn_code LIKE  CONCAT('%',#{param.paramValue,jdbcType=VARCHAR},'%')  
		</if>
		<if test="param.paramType != null and param.paramValue != null and param.paramValue != '' and param.paramType == 7">
			AND spmpn.product_line LIKE CONCAT('%',#{param.paramValue,jdbcType=VARCHAR},'%') 
		</if>
		<if test="stockType != null and stockType == 1">
			AND stock.stock_quantity <![CDATA[>]]> 0
		</if>
		<if test="stockType != null and stockType == 2">
			AND stock.stock_quantity <![CDATA[<=]]> 0
		</if>
	
	        <if test="noStatus == null and status != null and status != ''">
				AND find_in_set(suppn.status,#{status})
			</if>
			<if test="noStatus != null">
			    AND ( 
				    spmpn.id not in (select pn_id from supply.t_pn_supply)
				    <if test="status != null and status != '' ">
				       or find_in_set(suppn.status,#{status})
			        </if>
			    )				
			</if>			
			<if test="param.timeType != null and param.timeType == 1">
			    <if test="param.startTime != null and param.startTime != ''">
			       AND suppn.create_time <![CDATA[>=]]> #{param.startTime,jdbcType=VARCHAR}
			    </if>
			    <if test="param.endTime != null and param.endTime != ''">
			       AND suppn.create_time <![CDATA[<=]]> concat(#{param.endTime,jdbcType=VARCHAR},' 23:59:59')
			    </if>			 
			</if>
			<if test="param.timeType != null and param.timeType == 2">
			    <if test="param.startTime != null and param.startTime != ''">
			       AND suppn.update_time <![CDATA[>=]]> #{param.startTime,jdbcType=VARCHAR}
			    </if>
			    <if test="param.endTime != null and param.endTime != ''">
			       AND suppn.update_time <![CDATA[<=]]> concat(#{param.endTime,jdbcType=VARCHAR},' 23:59:59')
			    </if>			 
			</if>
	   
  </sql>
 

  
  <!-- <select id="getBySupplyIds" resultMap="PnSupplyChannelDO" >
    SELECT suppn.id supplyId, suppn.status, suppn.moq minOrderAmount, pn.pn_code, pn.mpq minPackAmount,
    	pn.brand_name, IFNULL(pn.stock_quantity, 0) stock_quantity, pn.sp_id
    FROM supply.t_pn_supply suppn
    LEFT JOIN (SELECT stock.stock_quantity, stock.mpq, stock.sp_id,
		spmpn.brand_name, spmpn.pn_code, spmpn.id
		FROM spm.t_partnumber spmpn
		LEFT JOIN spm.t_partnumber_stock stock ON spmpn.id = stock.pn_id
		WHERE spmpn.state = 0 AND spmpn.`status` = 0) pn 
	ON pn.id = suppn.pn_id
	WHERE suppn.sales_unit = 1 AND suppn.id IN
  	<foreach item="id" index="index" collection="supplyIds" open="("
		separator="," close=")">
		#{id}
	</foreach>
  </select>
  <select id="getChannelList" resultMap="PnSupplyChannelDO" >
    SELECT suppn.id supplyId, suppn.status, suppn.moq minOrderAmount, pn.pn_code, pn.mpq minPackAmount,
    	pn.brand_name, pn.stock_quantity
	FROM 
	(SELECT stock.stock_quantity, stock.mpq,
		spmpn.brand_name, spmpn.pn_code, spmpn.id
		FROM spm.t_partnumber spmpn
		LEFT JOIN spm.t_partnumber_stock stock ON spmpn.pn_code = stock.pn_code AND spmpn.sp_id = stock.sp_id AND spmpn.brand_name = stock.brand_name
		WHERE spmpn.state = 0 AND spmpn.`status` = 0 
		<if test="pnCode != null">
			AND spmpn.pn_code LIKE CONCAT('%',#{pnCode},'%')
		</if>
	LIMIT #{start,jdbcType=INTEGER}, #{len,jdbcType=INTEGER} ) pn
	LEFT JOIN supply.t_pn_supply suppn ON suppn.sales_unit = 1 AND pn.id = suppn.pn_id
  </select>
  <select id="getChannelListCount" resultType="java.lang.Integer" >
    SELECT COUNT(1) 
    FROM spm.t_partnumber
	WHERE state = 0 AND `status` = 0 
	<if test="pnCode != null">
		AND pn_code LIKE CONCAT('%',#{pnCode},'%'))
	</if>
  </select> -->
  
</mapper>